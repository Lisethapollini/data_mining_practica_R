---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}

a = nrow(df_seeds)
b = ncol(df_seeds)

paste("Dentro del dataset hay un total de", a, "filas y", b, "columnas")
```

#### PREGUNTA 2

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds$tipo = factor(df_seeds$tipo, labels = c("Kama","Rosa","Canadian"))
print(df_seeds)
```

#### PREGUNTA 3

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
library(dplyr)
df_seeds |> group_by(tipo) |> summarise(media_area_tipo = round(mean(area), 2))
```

#### PREGUNTA 4

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: Este gráfico se llama "Boxplot" o "Diagrama de cajas y bigotes". La línea del centro de la caja representa la mediana.

#### PREGUNTA 5

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x=compacto, y=area, color=tipo)) + geom_point()
```

#### PREGUNTA 6

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: La línea crea una nueva columna dentro del dataset llamada "is_kama" compuesta por valores verdaderos y falsos. Serán TRUE aquellas filas donde el tipo coincida con KAMA y FALSE el resto.

#### PREGUNTA 7

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: Es aconsejable dividir nuestros datos en "train" y "test" para poder entrenar el modelo y posteriormente comprobarlo. De esta manera podamos llevar a cabo la verificación cruzada y analizaremos cómo se comporta nuestro modelo con nuevos datos.

#### PREGUNTA 8

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: Deberíamos utilizar el modelo GLM (modelo lineal generalizado) para modelos logísticos de datos binarios.

#### PREGUNTA 9

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
#glm(variable dependiente ~ variables independientes que influyen sobre la dependiente, family = binomial, data frame utilizado)
modelo = glm(is_kama ~area + perimetro + compacto + longitud + coeficient.asimetria + longitud.ranura, family=binomial, data = df_seeds_train)

```

#### PREGUNTA 10

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
# Armamos la matriz de confusión 
umbral = 0.5
pred_test = predict(modelo, df_seeds_test, type="response")

#comprobación visual
#pred_test > umbral
#df_seeds_test$is_kama

M = table(real=df_seeds_test$is_kama, pred=pred_test>umbral)

paste("Presición:", M[2,2]/(M[1,2]+M[2,2]))
paste("Exhaustividad:", M[2,2]/(M[2,1]+M[2,2]))

```

#### PREGUNTA 11

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: Generamos números aleatorios, seleccionamos del dataset las columnas area, perimetro, compacto, longitud, anchura, coeficient.asimetria, longitud.ranura y las almacenamos dentro de la variable cl. Separamos en tres grupos distintos (3 clusters) y generamos una tabla que nos permite comparar real versus cluster.
